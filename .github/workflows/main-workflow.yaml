name: main-workflow

on: 
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

env:
  docker_username:  ${{ secrets.DOCKER_USERNAME }}
  docker_password:  ${{ secrets.DOCKER_PASSWORD }}
  GIT_COMMIT:       ${{ github.sha }}

jobs:
  clone:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - name: Clone-down
        uses: actions/checkout@v2  
      - name: Upload Repo
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: .

  build-and-test:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    needs: clone
    steps: 
      - name: download Repo
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: build  
        run: chmod +x ci/build-app.sh && ci/build-app.sh
      - name: unit-test
        run: chmod +x ci/unit-test-app.sh && ci/unit-test-app.sh
      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: .
  
  docker-image:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: download Repo
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: build docker
        run: chmod +x ci/build-docker.sh && ci/build-docker.sh
      - name: push docker
        run: chmod +x ci/push-docker.sh && ci/push-docker.sh
        
  compose-test:
    runs-on: self-hosted
    needs: docker-image
    steps: 
      - name: download Repo
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Execute component test
        run: chmod +x ci/component-test.sh && GIT_COMMIT="GA-$GITHUB_SHA" && ci/component-test.sh

  performance-test:
    runs-on: ubuntu-latest
    needs: docker-image
    steps: 
      - name: download Repo
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Execute performance test
        run: chmod +x ci/performance-test.sh && ci/performance-test.sh

#  build-and-push:
#    runs-on: ubuntu-latest
#    needs: [test, build]
#    steps:
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ env.docker_username }}
#          password: ${{ env.docker_password }}
#      - name: Build and push
#        uses: docker/build-push-action@v2
#        with:
#          push: true
#          tags: $docker_username/micronaut-app:1.0-${GIT_COMMIT::8} 
